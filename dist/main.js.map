{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-list/./src/editForm.js","webpack://todo-list/./src/taskView.js","webpack://todo-list/./src/index.js","webpack://todo-list/./src/task.js"],"sourcesContent":["import {renderTaskView, clearTaskView} from \"./taskView\";\r\n\r\nconst form = document.querySelector('form');\r\nconst titleInput = document.getElementById('title');\r\nconst descriptionInput = document.getElementById('description');\r\nconst dueDateInput = document.getElementById('due-date');\r\nconst checklistItemsUl = document.querySelector('.checklist-items-ul');\r\nconst priorities = document.querySelectorAll('[type=\"radio\"]');\r\nconst h3 = form.querySelector('h3');\r\nconst confirmBtn = form.querySelector('.confirm-btn');\r\nconst cancelBtn = form.querySelector('.cancel-btn');\r\n\r\nexport default function editForm(task) {\r\n  h3.textContent = 'edit task';\r\n  confirmBtn.textContent = 'save';\r\n\r\n  cancelBtn.addEventListener('click', hideForm);\r\n  confirmBtn.addEventListener('click', saveForm.bind(this, task));\r\n\r\n  populateForm(task);\r\n\r\n  form.style.display = 'grid';\r\n}\r\n\r\nfunction populateForm(task) {\r\n  titleInput.value = task.title;\r\n  descriptionInput.value = task.desc;\r\n  dueDateInput.value = task.dueDate;\r\n\r\n  const priorityInput = document.getElementById(task.priority);\r\n  priorityInput.checked = true;\r\n\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklistItemsUl.appendChild(listItem);\r\n  })\r\n}\r\n\r\nfunction clearForm() {\r\n  h3.textContent = 'new task';\r\n  confirmBtn.textContent = 'add'\r\n\r\n  titleInput.value = '';\r\n  descriptionInput.value = '';\r\n  dueDateInput.value = '';\r\n\r\n  priorities.forEach(priority => priority.checked = false);\r\n\r\n  while(checklistItemsUl.firstChild) {\r\n    checklistItemsUl.removeChild(checklistItemsUl.firstChild);\r\n  }\r\n}\r\n\r\nfunction hideForm() {\r\n  form.display = 'none';\r\n  clearForm();\r\n}\r\n\r\nfunction saveForm(task) {\r\n  task.title = titleInput.value;\r\n  task.desc = descriptionInput.value;\r\n  task.dueDate = dueDateInput.value;\r\n  \r\n  let priorityInput;\r\n  for(let priority of priorities) {\r\n    if(priority.checked === true) {\r\n      priorityInput = priority;\r\n    }\r\n  }\r\n  task.priority = priorityInput.value;\r\n\r\n  task.checklist.splice(0);\r\n  for(let li of checklistItemsUl.childNodes) {\r\n    task.addToChecklist(li.textContent);\r\n  }\r\n\r\n  clearTaskView(task.id);\r\n  renderTaskView(task);\r\n  hideForm();\r\n}\r\n","import editForm from \"./editForm\";\r\n\r\nconst taskContainer = document.querySelector('.tasks');\r\n\r\nexport function renderTaskView(task) {\r\n  const taskView = document.createElement('div');\r\n  taskView.setAttribute('data-id', task.id);\r\n\r\n  const title = document.createElement('h4');\r\n  title.textContent = task.title;\r\n\r\n  const editBtn = document.createElement('button');\r\n  editBtn.textContent = 'edit';\r\n  editBtn.addEventListener('click', editForm.bind(this, task));\r\n\r\n  const desc = document.createElement('p');\r\n  desc.textContent = task.desc;\r\n\r\n  const dueDate = document.createElement('p');\r\n  dueDate.textContent = task.dueDate;\r\n\r\n  const priority = document.createElement('p');\r\n  priority.textContent = task.priority;\r\n\r\n  const checklist = document.createElement('ul');\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklist.appendChild(listItem);\r\n  })\r\n\r\n  const isComplete = document.createElement('input');\r\n  isComplete.setAttribute('type', 'checkbox');\r\n  isComplete.checked = task.isComplete;\r\n\r\n  taskView.append(title, desc, dueDate, priority, checklist, isComplete, editBtn);\r\n  taskContainer.appendChild(taskView);\r\n}\r\n\r\nexport function clearTaskView(id) {\r\n  const taskView = document.querySelector(`[data-id='${id}']`);\r\n  while(taskView.firstChild) {\r\n    taskView.removeChild(taskView.firstChild);\r\n  }\r\n  taskContainer.removeChild(taskView);\r\n}","import Task from \"./task\";\r\nimport {renderTaskView} from \"./taskView\";\r\n\r\nconst t1 = new Task(0, 'do stuff', 'do some things', '05-28-3000', 'high', ['do', 'the', 'stuff']);\r\nrenderTaskView(t1);\r\n\r\nconst addButton = document.querySelector('.new-task-btn');\r\nconst cancelButton = document.querySelector('.cancel-btn');\r\nconst form = document.querySelector('form');\r\nconst checklistButton = document.querySelector('.checklist-btn');\r\nconst checklistInput = document.getElementById('checklist');\r\nconst checklistItemContainer = document.querySelector('.checklist-items');\r\nchecklistButton.addEventListener('click', () => {\r\n  if(checklistInput.value) {\r\n    const item = document.createElement('li');\r\n    item.textContent = checklistInput.value;\r\n    checklistItemContainer.querySelector('ul').appendChild(item);\r\n    checklistInput.value = '';\r\n  }\r\n})\r\ncancelButton.addEventListener('click', () => {\r\n  form.style.display = 'none';\r\n})\r\naddButton.addEventListener('click', () => {\r\n  form.style.display = 'grid';\r\n})\r\n\r\n\r\n","export default class Task {\r\n  constructor(id, title, desc, dueDate, priority, checklist) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.desc = desc;\r\n    this.dueDate = dueDate;\r\n    this.priority = priority;\r\n    this.checklist = checklist;\r\n    this.isComplete = false;\r\n  }\r\n\r\n  addToChecklist(item) {\r\n    this.checklist.push(item);\r\n  }\r\n}"],"names":["document","querySelector","titleInput","getElementById","descriptionInput","dueDateInput","checklistItemsUl","priorities","querySelectorAll","h3","confirmBtn","cancelBtn","editForm","task","textContent","addEventListener","hideForm","saveForm","bind","this","value","title","desc","dueDate","priority","checked","checklist","forEach","item","listItem","createElement","appendChild","populateForm","style","display","firstChild","removeChild","clearForm","priorityInput","splice","li","childNodes","addToChecklist","id","taskView","taskContainer","clearTaskView","renderTaskView","setAttribute","editBtn","isComplete","append","constructor","push","addButton","cancelButton","checklistButton","checklistInput","checklistItemContainer"],"sourceRoot":""}