{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-list/./src/task.js","webpack://todo-list/./src/taskView.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/projectView.js","webpack://todo-list/./src/todoListView.js","webpack://todo-list/./src/todoList.js","webpack://todo-list/./src/form.js","webpack://todo-list/./src/index.js"],"sourcesContent":["export default class Task {\r\n  constructor(title, desc, dueDate, priority) {\r\n    this.id = Task.id;\r\n    Task.id++;\r\n\r\n    this.title = title;\r\n    this.desc = desc;\r\n    this.dueDate = dueDate;\r\n    this.priority = priority;\r\n    this.checklist = [];\r\n    this.isComplete = false;\r\n  }\r\n\r\n  addToChecklist(item) {\r\n    this.checklist.push(item);\r\n  }\r\n}\r\n\r\nTask.id = 0;","import renderForm from \"./form\";\r\n\r\nconst taskContainer = document.querySelector('.tasks');\r\n\r\nexport function renderTaskView(task) {\r\n  const taskView = document.createElement('div');\r\n  taskView.setAttribute('data-task-id', task.id);\r\n  taskView.classList.add('task');\r\n\r\n  const collapsibleItems = document.createElement('div');\r\n  collapsibleItems.classList.add('collapsible-items');\r\n\r\n  const title = document.createElement('h4');\r\n  title.textContent = task.title;\r\n\r\n  const editBtn = document.createElement('button');\r\n  editBtn.textContent = 'edit';\r\n  editBtn.addEventListener('click', renderForm.bind(this, task));\r\n\r\n  const deleteBtn = document.createElement('button');\r\n  deleteBtn.classList.add('delete-btn');\r\n  deleteBtn.textContent = 'delete';\r\n\r\n  const desc = document.createElement('p');\r\n  desc.textContent = task.desc;\r\n\r\n  const dueDate = document.createElement('p');\r\n  dueDate.textContent = task.dueDate;\r\n\r\n  const priority = document.createElement('p');\r\n  priority.textContent = task.priority;\r\n\r\n  const checklist = document.createElement('ul');\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklist.appendChild(listItem);\r\n  })\r\n\r\n  const isComplete = document.createElement('input');\r\n  isComplete.setAttribute('type', 'checkbox');\r\n  isComplete.checked = task.isComplete;\r\n\r\n  collapsibleItems.append(desc, priority, checklist, editBtn, deleteBtn);\r\n  collapsibleItems.style.display = 'none';\r\n\r\n  taskView.append(isComplete, title, dueDate, collapsibleItems);\r\n  taskView.addEventListener('click', toggleCollapsibleItems);\r\n\r\n  let followingTask = document.querySelector(`[data-task-id='${task.id + 1}']`)\r\n  if(followingTask) {\r\n    taskContainer.insertBefore(taskView, followingTask);\r\n  } else {\r\n    taskContainer.appendChild(taskView);\r\n  }\r\n}\r\n\r\nexport function clearTaskView(id) {\r\n  const taskView = document.querySelector(`[data-task-id='${id}']`);\r\n  taskView.removeEventListener('click', toggleCollapsibleItems);\r\n\r\n  while(taskView.firstChild) {\r\n    taskView.removeChild(taskView.firstChild);\r\n  }\r\n  taskContainer.removeChild(taskView);\r\n}\r\n\r\nfunction toggleCollapsibleItems(e) {\r\n  if(e.target !== this.querySelector('input') && e.target !== this.querySelector('button')) {\r\n    const collapsibleItems = this.querySelector('.collapsible-items');\r\n    collapsibleItems.style.display = collapsibleItems.style.display === 'none' ? 'block' : 'none';\r\n  }\r\n}","export default class Project {\r\n  constructor(name) {\r\n    this.id = Project.id;\r\n    Project.id++;\r\n    this.name = name;\r\n    this.tasks = [];\r\n  }\r\n\r\n  addTask(task) {\r\n    this.tasks.push(task);\r\n  }\r\n\r\n  deleteTask(task) {\r\n    this.tasks.splice(this.tasks.indexOf(task), 1);\r\n  }\r\n\r\n  deleteTaskById(id) {\r\n    for(let i = 0; i < this.tasks.length; i++) {\r\n      if(this.tasks[i].id === +id) {\r\n        this.tasks.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nProject.id = 0;","import { renderTaskView, clearTaskView } from \"./taskView\";\r\nimport { getActiveProject } from \"./todoListView\";\r\n\r\nconst taskContainer = document.querySelector('.tasks');\r\nconst taskContainerHeading = document.querySelector('.tasks h2');\r\n\r\ntaskContainer.addEventListener('click', removeTaskFromProject);\r\n\r\nexport function renderProjectView(project) {\r\n  taskContainerHeading.textContent = project.name; \r\n  project.tasks.forEach(task => renderTaskView(task));\r\n}\r\n\r\nexport function clearProjectView() {\r\n  taskContainerHeading.textContent = '';\r\n  getActiveProject().tasks.forEach(task => {\r\n    clearTaskView(task.id);\r\n  })\r\n}\r\n\r\nfunction removeTaskFromProject(e) {\r\n  if(e.target.className === 'delete-btn') {\r\n    const taskId = e.target.parentNode.parentNode.getAttribute('data-task-id');\r\n    getActiveProject().deleteTaskById(taskId);\r\n    clearTaskView(taskId);\r\n  }\r\n}","import Task from \"./task\";\r\nimport TodoList from \"./todoList\";\r\nimport Project from \"./project\";\r\nimport {renderProjectView, clearProjectView} from \"./projectView\";\r\n\r\nconst projectList = document.querySelector('.projects');\r\nconst newProjectBtn = document.querySelector('.new-project-btn');\r\nconst newProjectInputContainer = document.querySelector('.new-project-input');\r\nconst newProjectInput = document.getElementById('new-project');\r\nconst addProjectBtn = document.querySelector('.add-project-btn');\r\nconst cancelProjectBtn = document.querySelector('.cancel-project-btn');\r\nconst colorPicker = document.querySelector('.icon-color-picker');\r\n\r\nconst todoList = new TodoList();\r\nlet activeProject;\r\n\r\nexport function getActiveProject() {\r\n  return activeProject;\r\n}\r\n\r\nfunction showNewProjectInput() {\r\n  newProjectBtn.style.display = 'none';\r\n  newProjectInputContainer.style.display = 'block';\r\n}\r\n\r\nfunction addNewProject() {\r\n  if(newProjectInput.value) {\r\n    const newProject = new Project(newProjectInput.value);\r\n    todoList.addProject(newProject);\r\n    addProjectToList(newProject);\r\n    clearProjectView();\r\n    renderProjectView(newProject);\r\n    activeProject = newProject;\r\n    cancelProjectInput();\r\n  }\r\n}\r\n\r\nfunction addProjectToList(project) {\r\n  const newProject = document.createElement('div');\r\n  newProject.setAttribute('data-proj-id', project.id);\r\n\r\n  const newProjectIcon = document.createElement('span');\r\n  const newProjectName = project.name;\r\n\r\n  newProject.append(newProjectIcon, newProjectName);\r\n  projectList.insertBefore(newProject, newProjectBtn);\r\n\r\n  newProjectIcon.addEventListener('click', toggleColorPicker);\r\n\r\n  newProject.addEventListener('click', () => {\r\n    clearProjectView();\r\n    renderProjectView(project);\r\n    activeProject = project;\r\n  })\r\n}\r\n\r\nfunction toggleColorPicker() {\r\n  if(colorPicker.style.display === 'block') {\r\n    colorPicker.style.display = 'none';\r\n  } else {\r\n    colorPicker.style.display = 'block';\r\n  }\r\n  colorPicker.setAttribute('data-proj', this.parentNode.getAttribute('data-proj-id'));\r\n  colorPicker.style.top = `calc(${this.parentNode.offsetTop}px - 2em)`;\r\n}\r\n\r\nfunction changeIconColor() {\r\n  const newColor = getComputedStyle(this).backgroundColor;\r\n  const projId = this.parentNode.getAttribute('data-proj');\r\n  const proj = document.querySelector(`[data-proj-id='${projId}']`);\r\n  proj.querySelector('span').style.backgroundColor = newColor;\r\n  colorPicker.style.display = 'none';\r\n}\r\n\r\nfunction cancelProjectInput() {\r\n  newProjectBtn.style.display = 'inline';\r\n  newProjectInputContainer.style.display = 'none';\r\n  newProjectInput.value = '';\r\n}\r\n\r\nfunction bindEvents() {\r\n  newProjectBtn.addEventListener('click', showNewProjectInput);\r\n  addProjectBtn.addEventListener('click', addNewProject);\r\n  cancelProjectBtn.addEventListener('click', cancelProjectInput);\r\n\r\n  const colorIcons = colorPicker.querySelectorAll('span');\r\n  colorIcons.forEach(icon => {\r\n    icon.addEventListener('click', changeIconColor);\r\n  })\r\n}\r\n\r\nfunction setDefaultProject() {\r\n  const defaultProject = new Project('tasks');\r\n\r\n  const task1 = new Task('task a', 'a description', '06-12-1970', 'medium');\r\n  task1.addToChecklist('a');\r\n  task1.addToChecklist('b');\r\n\r\n  const task2 = new Task('task b', 'b description', '09-13-2023', 'high');\r\n  task2.addToChecklist('c');\r\n  task2.addToChecklist('d');\r\n\r\n  defaultProject.addTask(task1);\r\n  defaultProject.addTask(task2); \r\n\r\n  activeProject = defaultProject;\r\n  addProjectToList(defaultProject);\r\n  renderProjectView(defaultProject);\r\n}\r\n\r\nbindEvents();\r\nsetDefaultProject();","export default class TodoList {\r\n  constructor() {\r\n    this.projects = [];\r\n  }\r\n\r\n  addProject(project) {\r\n    this.projects.push(project);\r\n  }\r\n\r\n  deleteProject(project) {\r\n    this.projects.splice(this.projects.indexOf(project), 1);\r\n  }\r\n}","import Task from \"./task\";\r\nimport {renderTaskView, clearTaskView} from \"./taskView\";\r\nimport { getActiveProject } from \"./todoListView\";\r\n\r\nconst form = document.querySelector('form');\r\nconst titleInput = document.getElementById('title');\r\nconst descriptionInput = document.getElementById('description');\r\nconst dueDateInput = document.getElementById('due-date');\r\nconst checklistInput = document.getElementById('checklist');\r\nconst checklistItems = document.querySelector('.checklist-items');\r\nconst priorities = document.querySelectorAll('[type=\"radio\"]');\r\nconst h3 = form.querySelector('h3');\r\nconst checklistButton = form.querySelector('.checklist-btn');\r\nconst confirmBtn = form.querySelector('.confirm-btn');\r\nconst cancelBtn = form.querySelector('.cancel-btn');\r\n\r\nlet boundSaveForm;\r\n\r\nexport default function renderForm(task) {\r\n  if(task) {\r\n    populateForm(task);\r\n  }\r\n\r\n  boundSaveForm = saveForm.bind(this, task);\r\n\r\n  h3.textContent = task ? 'edit task' : 'add task';\r\n  confirmBtn.textContent = task ? 'save' : 'add';\r\n  confirmBtn.addEventListener('click', boundSaveForm);\r\n\r\n  form.style.display = 'grid';\r\n}\r\n\r\nfunction bindEvents() {\r\n  cancelBtn.addEventListener('click', clearForm);\r\n  checklistButton.addEventListener('click', addItemToChecklist);\r\n}\r\n\r\nfunction populateForm(task) {\r\n  titleInput.value = task.title;\r\n  descriptionInput.value = task.desc;\r\n  dueDateInput.value = task.dueDate;\r\n\r\n  for(let priority of priorities) {\r\n    if(priority.id === task.priority) {\r\n      priority.checked = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklistItems.appendChild(listItem);\r\n  })\r\n}\r\n\r\nfunction clearForm() {\r\n  titleInput.value = '';\r\n  descriptionInput.value = '';\r\n  dueDateInput.value = '';\r\n\r\n  priorities.forEach(priority => priority.checked = false);\r\n\r\n  while(checklistItems.firstChild) {\r\n    checklistItems.removeChild(checklistItems.firstChild);\r\n  }\r\n\r\n  form.style.display = 'none';\r\n  confirmBtn.removeEventListener('click', boundSaveForm);\r\n}\r\n\r\nfunction saveForm(task) {\r\n  if(!task) {\r\n    task = new Task();\r\n    getActiveProject().addTask(task);\r\n  }\r\n\r\n  task.title = titleInput.value;\r\n  task.desc = descriptionInput.value;\r\n  task.dueDate = dueDateInput.value;\r\n  \r\n  let priorityInput;\r\n  for(let priority of priorities) {\r\n    if(priority.checked === true) {\r\n      priorityInput = priority;\r\n      break;\r\n    }\r\n  }\r\n  task.priority = priorityInput ? priorityInput.value : '';\r\n\r\n  task.checklist.splice(0);\r\n  for(let li of checklistItems.childNodes) {\r\n    task.addToChecklist(li.textContent);\r\n  }\r\n\r\n  if(document.querySelector(`[data-task-id='${task.id}']`)) {\r\n    clearTaskView(task.id);\r\n  }\r\n\r\n  renderTaskView(task);\r\n  clearForm();\r\n}\r\n\r\nfunction addItemToChecklist() {\r\n  if(checklistInput.value) {\r\n    const item = document.createElement('li');\r\n    item.textContent = checklistInput.value;\r\n    checklistItems.appendChild(item);\r\n    checklistInput.value = '';\r\n  }\r\n}\r\n\r\nbindEvents();","import renderForm from \"./form\";\r\n\r\nconst newTaskBtn = document.querySelector('.new-task-btn');\r\nnewTaskBtn.addEventListener('click', () => renderForm());\r\n\r\n//rename project\r\n//delete project\r\n//change project color\r\n\r\n\r\n"],"names":["Task","constructor","title","desc","dueDate","priority","this","id","checklist","isComplete","addToChecklist","item","push","taskContainer","document","querySelector","renderTaskView","task","taskView","createElement","setAttribute","classList","add","collapsibleItems","textContent","editBtn","addEventListener","renderForm","bind","deleteBtn","forEach","listItem","appendChild","checked","append","style","display","toggleCollapsibleItems","followingTask","insertBefore","clearTaskView","removeEventListener","firstChild","removeChild","e","target","Project","name","tasks","addTask","deleteTask","splice","indexOf","deleteTaskById","i","length","taskContainerHeading","renderProjectView","project","clearProjectView","getActiveProject","className","taskId","parentNode","getAttribute","projectList","newProjectBtn","newProjectInputContainer","newProjectInput","getElementById","addProjectBtn","cancelProjectBtn","colorPicker","todoList","projects","addProject","deleteProject","activeProject","addProjectToList","newProject","newProjectIcon","newProjectName","toggleColorPicker","top","offsetTop","changeIconColor","newColor","getComputedStyle","backgroundColor","projId","cancelProjectInput","value","querySelectorAll","icon","defaultProject","task1","task2","setDefaultProject","titleInput","descriptionInput","dueDateInput","checklistInput","checklistItems","priorities","h3","checklistButton","confirmBtn","boundSaveForm","populateForm","saveForm","clearForm","priorityInput","li","childNodes"],"sourceRoot":""}