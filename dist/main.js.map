{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-list/./src/task.js","webpack://todo-list/./src/taskView.js","webpack://todo-list/./src/form.js","webpack://todo-list/./src/index.js"],"sourcesContent":["export default class Task {\r\n  constructor(title, desc, dueDate, priority) {\r\n    this.id = Task.id;\r\n    Task.id++;\r\n\r\n    this.title = title;\r\n    this.desc = desc;\r\n    this.dueDate = dueDate;\r\n    this.priority = priority;\r\n    this.checklist = [];\r\n    this.isComplete = false;\r\n  }\r\n\r\n  addToChecklist(item) {\r\n    this.checklist.push(item);\r\n  }\r\n}\r\n\r\nTask.id = 0;","import renderForm from \"./form\";\r\n\r\nconst taskContainer = document.querySelector('.tasks');\r\n\r\nexport function renderTaskView(task) {\r\n  const taskView = document.createElement('div');\r\n  taskView.setAttribute('data-id', task.id);\r\n\r\n  const collapsibleItems = document.createElement('div');\r\n  collapsibleItems.classList.add('collapsible-items');\r\n\r\n  const title = document.createElement('h4');\r\n  title.textContent = task.title;\r\n\r\n  const editBtn = document.createElement('button');\r\n  editBtn.textContent = 'edit';\r\n  editBtn.addEventListener('click', renderForm.bind(this, task));\r\n\r\n  const desc = document.createElement('p');\r\n  desc.textContent = task.desc;\r\n\r\n  const dueDate = document.createElement('p');\r\n  dueDate.textContent = task.dueDate;\r\n\r\n  const priority = document.createElement('p');\r\n  priority.textContent = task.priority;\r\n\r\n  const checklist = document.createElement('ul');\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklist.appendChild(listItem);\r\n  })\r\n\r\n  const isComplete = document.createElement('input');\r\n  isComplete.setAttribute('type', 'checkbox');\r\n  isComplete.checked = task.isComplete;\r\n\r\n  collapsibleItems.append(desc, priority, checklist, isComplete);\r\n  collapsibleItems.style.display = 'none';\r\n\r\n  taskView.append(title, dueDate, editBtn, collapsibleItems);\r\n  taskView.addEventListener('click', toggleCollapsibleItems);\r\n\r\n  let followingTask = document.querySelector(`[data-id='${task.id + 1}']`)\r\n  if(followingTask) {\r\n    taskContainer.insertBefore(taskView, followingTask);\r\n  } else {\r\n    taskContainer.appendChild(taskView);\r\n  }\r\n}\r\n\r\nexport function clearTaskView(id) {\r\n  const taskView = document.querySelector(`[data-id='${id}']`);\r\n  taskView.removeEventListener('click', toggleCollapsibleItems);\r\n\r\n  while(taskView.firstChild) {\r\n    taskView.removeChild(taskView.firstChild);\r\n  }\r\n  taskContainer.removeChild(taskView);\r\n}\r\n\r\nfunction toggleCollapsibleItems() {\r\n  const collapsibleItems = document.querySelector('.collapsible-items');\r\n  collapsibleItems.style.display = collapsibleItems.style.display === 'none' ? 'block' : 'none';\r\n}","import Task from \"./task\";\r\nimport {renderTaskView, clearTaskView} from \"./taskView\";\r\n\r\nconst form = document.querySelector('form');\r\nconst titleInput = document.getElementById('title');\r\nconst descriptionInput = document.getElementById('description');\r\nconst dueDateInput = document.getElementById('due-date');\r\nconst checklistInput = document.getElementById('checklist');\r\nconst checklistItems = document.querySelector('.checklist-items');\r\nconst priorities = document.querySelectorAll('[type=\"radio\"]');\r\nconst h3 = form.querySelector('h3');\r\nconst checklistButton = form.querySelector('.checklist-btn');\r\nconst confirmBtn = form.querySelector('.confirm-btn');\r\nconst cancelBtn = form.querySelector('.cancel-btn');\r\n\r\nlet boundSaveForm;\r\n\r\nexport default function renderForm(task) {\r\n  if(task) {\r\n    populateForm(task);\r\n  }\r\n\r\n  boundSaveForm = saveForm.bind(this, task);\r\n\r\n  h3.textContent = task ? 'edit task' : 'add task';\r\n  confirmBtn.textContent = task ? 'save' : 'add';\r\n  confirmBtn.addEventListener('click', boundSaveForm);\r\n\r\n  form.style.display = 'grid';\r\n}\r\n\r\nfunction bindEvents() {\r\n  cancelBtn.addEventListener('click', clearForm);\r\n  checklistButton.addEventListener('click', addItemToChecklist);\r\n}\r\n\r\nfunction populateForm(task) {\r\n  titleInput.value = task.title;\r\n  descriptionInput.value = task.desc;\r\n  dueDateInput.value = task.dueDate;\r\n\r\n  for(let priority of priorities) {\r\n    if(priority.id === task.priority) {\r\n      priority.checked = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklistItems.appendChild(listItem);\r\n  })\r\n}\r\n\r\nfunction clearForm() {\r\n  titleInput.value = '';\r\n  descriptionInput.value = '';\r\n  dueDateInput.value = '';\r\n\r\n  priorities.forEach(priority => priority.checked = false);\r\n\r\n  while(checklistItems.firstChild) {\r\n    checklistItems.removeChild(checklistItems.firstChild);\r\n  }\r\n\r\n  form.style.display = 'none';\r\n  confirmBtn.removeEventListener('click', boundSaveForm);\r\n}\r\n\r\nfunction saveForm(task) {\r\n  if(!task) {\r\n    task = new Task();\r\n  }\r\n\r\n  task.title = titleInput.value;\r\n  task.desc = descriptionInput.value;\r\n  task.dueDate = dueDateInput.value;\r\n  \r\n  let priorityInput;\r\n  for(let priority of priorities) {\r\n    if(priority.checked === true) {\r\n      priorityInput = priority;\r\n      break;\r\n    }\r\n  }\r\n  task.priority = priorityInput ? priorityInput.value : '';\r\n\r\n  task.checklist.splice(0);\r\n  for(let li of checklistItems.childNodes) {\r\n    task.addToChecklist(li.textContent);\r\n  }\r\n\r\n  if(document.querySelector(`[data-id='${task.id}']`)) {\r\n    clearTaskView(task.id);\r\n  }\r\n\r\n  renderTaskView(task);\r\n  clearForm();\r\n}\r\n\r\nfunction addItemToChecklist() {\r\n  if(checklistInput.value) {\r\n    const item = document.createElement('li');\r\n    item.textContent = checklistInput.value;\r\n    checklistItems.appendChild(item);\r\n    checklistInput.value = '';\r\n  }\r\n}\r\n\r\nbindEvents();","import renderForm from \"./form\";\r\n\r\nconst newTaskBtn = document.querySelector('.new-task-btn');\r\nnewTaskBtn.addEventListener('click', () => renderForm());\r\n\r\n\r\n"],"names":["Task","constructor","title","desc","dueDate","priority","this","id","checklist","isComplete","addToChecklist","item","push","taskContainer","document","querySelector","toggleCollapsibleItems","collapsibleItems","style","display","titleInput","getElementById","descriptionInput","dueDateInput","checklistInput","checklistItems","priorities","querySelectorAll","h3","checklistButton","confirmBtn","boundSaveForm","renderForm","task","value","checked","forEach","listItem","createElement","textContent","appendChild","populateForm","saveForm","bind","addEventListener","clearForm","firstChild","removeChild","removeEventListener","priorityInput","splice","li","childNodes","taskView","clearTaskView","setAttribute","classList","add","editBtn","append","followingTask","insertBefore","renderTaskView"],"sourceRoot":""}