{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-list/./src/task.js","webpack://todo-list/./src/taskView.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/projectView.js","webpack://todo-list/./src/todoListView.js","webpack://todo-list/./src/todoList.js","webpack://todo-list/./src/form.js","webpack://todo-list/./src/index.js"],"sourcesContent":["export default class Task {\r\n  constructor(title, desc, dueDate, priority) {\r\n    this.id = Task.id;\r\n    Task.id++;\r\n\r\n    this.title = title;\r\n    this.desc = desc;\r\n    this.dueDate = dueDate;\r\n    this.priority = priority;\r\n    this.checklist = [];\r\n    this.isComplete = false;\r\n  }\r\n\r\n  addToChecklist(item) {\r\n    this.checklist.push(item);\r\n  }\r\n}\r\n\r\nTask.id = 0;","import renderForm from \"./form\";\r\n\r\nconst taskContainer = document.querySelector('.tasks');\r\n\r\nexport function renderTaskView(task) {\r\n  const taskView = document.createElement('div');\r\n  taskView.setAttribute('data-task-id', task.id);\r\n  taskView.classList.add('task');\r\n\r\n  const collapsibleItems = document.createElement('div');\r\n  collapsibleItems.classList.add('collapsible-items');\r\n\r\n  const title = document.createElement('h4');\r\n  title.textContent = task.title;\r\n\r\n  const editBtn = document.createElement('button');\r\n  editBtn.textContent = 'edit';\r\n  editBtn.addEventListener('click', renderForm.bind(this, task));\r\n\r\n  const deleteBtn = document.createElement('button');\r\n  deleteBtn.classList.add('delete-btn');\r\n  deleteBtn.textContent = 'delete';\r\n\r\n  const desc = document.createElement('p');\r\n  desc.textContent = task.desc;\r\n\r\n  const dueDate = document.createElement('p');\r\n  dueDate.textContent = task.dueDate;\r\n\r\n  const priority = document.createElement('p');\r\n  priority.textContent = task.priority;\r\n\r\n  const checklist = document.createElement('ul');\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklist.appendChild(listItem);\r\n  })\r\n\r\n  const isComplete = document.createElement('input');\r\n  isComplete.setAttribute('type', 'checkbox');\r\n  isComplete.checked = task.isComplete;\r\n\r\n  collapsibleItems.append(desc, priority, checklist, editBtn, deleteBtn);\r\n  collapsibleItems.style.display = 'none';\r\n\r\n  taskView.append(isComplete, title, dueDate, collapsibleItems);\r\n  taskView.addEventListener('click', toggleCollapsibleItems);\r\n\r\n  let followingTask = document.querySelector(`[data-task-id='${task.id + 1}']`)\r\n  if(followingTask) {\r\n    taskContainer.insertBefore(taskView, followingTask);\r\n  } else {\r\n    taskContainer.appendChild(taskView);\r\n  }\r\n}\r\n\r\nexport function clearTaskView(id) {\r\n  const taskView = document.querySelector(`[data-task-id='${id}']`);\r\n  taskView.removeEventListener('click', toggleCollapsibleItems);\r\n\r\n  while(taskView.firstChild) {\r\n    taskView.removeChild(taskView.firstChild);\r\n  }\r\n  taskContainer.removeChild(taskView);\r\n}\r\n\r\nfunction toggleCollapsibleItems(e) {\r\n  if(e.target !== this.querySelector('input') && e.target !== this.querySelector('button')) {\r\n    const collapsibleItems = this.querySelector('.collapsible-items');\r\n    collapsibleItems.style.display = collapsibleItems.style.display === 'none' ? 'block' : 'none';\r\n  }\r\n}","export default class Project {\r\n  constructor(name) {\r\n    this.id = Project.id;\r\n    Project.id++;\r\n    this.name = name;\r\n    this.tasks = [];\r\n  }\r\n\r\n  addTask(task) {\r\n    this.tasks.push(task);\r\n  }\r\n\r\n  deleteTask(task) {\r\n    this.tasks.splice(this.tasks.indexOf(task), 1);\r\n  }\r\n\r\n  deleteTaskById(id) {\r\n    for(let i = 0; i < this.tasks.length; i++) {\r\n      if(this.tasks[i].id === +id) {\r\n        this.tasks.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nProject.id = 0;","import { renderTaskView, clearTaskView } from \"./taskView\";\r\nimport { getActiveProject } from \"./todoListView\";\r\n\r\nconst taskContainer = document.querySelector('.tasks');\r\nconst taskContainerHeading = document.querySelector('.tasks h2');\r\n\r\nconst renameProjectContainer = document.querySelector('.project-rename');\r\nconst renameProjectBtn = document.querySelector('.rename-project-btn');\r\nconst renameProjectInput = document.getElementById('project-rename-input');\r\nconst renameProjectConfirm = document.querySelector('.project-rename-confirm');\r\nconst renameProjectCancel = document.querySelector('.project-rename-cancel');\r\n\r\ntaskContainer.addEventListener('click', removeTaskFromProject);\r\nrenameProjectBtn.addEventListener('click', toggleRenameProject);\r\nrenameProjectCancel.addEventListener('click', toggleRenameProject);\r\nrenameProjectConfirm.addEventListener('click', renameProject);\r\n\r\nexport function renderProjectView(project) {\r\n  taskContainerHeading.textContent = project.name; \r\n  project.tasks.forEach(task => renderTaskView(task));\r\n}\r\n\r\nexport function clearProjectView() {\r\n  taskContainerHeading.textContent = '';\r\n  getActiveProject().tasks.forEach(task => {\r\n    clearTaskView(task.id);\r\n  })\r\n}\r\n\r\nfunction toggleRenameProject() {\r\n  if(renameProjectContainer.style.display === 'none' || !renameProjectContainer.style.display) {\r\n    renameProjectContainer.style.display = 'block';\r\n    renameProjectInput.value = taskContainerHeading.textContent;\r\n    taskContainerHeading.style.display = 'none';\r\n    renameProjectBtn.style.visibility = 'hidden';\r\n  } else {\r\n    renameProjectContainer.style.display = 'none';\r\n    renameProjectInput.value = '';\r\n    taskContainerHeading.style.display = 'block';\r\n    renameProjectBtn.style.visibility = 'visible';\r\n  }\r\n}\r\n\r\nfunction renameProject() {\r\n  if(renameProjectInput.value) {\r\n    taskContainerHeading.textContent = renameProjectInput.value;\r\n    getActiveProject().name = renameProjectInput.value;\r\n    const activeProject = document.querySelector(`[data-proj-id='${getActiveProject().id}']`);\r\n    activeProject.querySelector('p').textContent = renameProjectInput.value;\r\n    toggleRenameProject();\r\n    localStorage.setItem(`project${getActiveProject().id}`, JSON.stringify(getActiveProject()));\r\n  }\r\n}\r\n\r\nfunction removeTaskFromProject(e) {\r\n  if(e.target.className === 'delete-btn') {\r\n    const taskId = e.target.parentNode.parentNode.getAttribute('data-task-id');\r\n    getActiveProject().deleteTaskById(taskId);\r\n    clearTaskView(taskId);\r\n    localStorage.setItem(`project${getActiveProject().id}`, JSON.stringify(getActiveProject()));\r\n  }\r\n}","import Task from \"./task\";\r\nimport TodoList from \"./todoList\";\r\nimport Project from \"./project\";\r\nimport {renderProjectView, clearProjectView} from \"./projectView\";\r\n\r\nconst projectList = document.querySelector('.projects');\r\nconst newProjectBtn = document.querySelector('.new-project-btn');\r\nconst newProjectInputContainer = document.querySelector('.new-project-input');\r\nconst newProjectInput = document.getElementById('new-project');\r\nconst addProjectBtn = document.querySelector('.add-project-btn');\r\nconst cancelProjectBtn = document.querySelector('.cancel-project-btn');\r\nconst colorPicker = document.querySelector('.icon-color-picker');\r\n\r\nconst todoList = new TodoList();\r\nlet activeProject;\r\n\r\nexport function getActiveProject() {\r\n  return activeProject;\r\n}\r\n\r\nfunction showNewProjectInput() {\r\n  newProjectBtn.style.display = 'none';\r\n  newProjectInputContainer.style.display = 'block';\r\n}\r\n\r\nfunction addNewProject() {\r\n  if(newProjectInput.value) {\r\n    const newProject = new Project(newProjectInput.value);\r\n    todoList.addProject(newProject);\r\n    addProjectToList(newProject);\r\n    clearProjectView();\r\n    renderProjectView(newProject);\r\n    activeProject = newProject;\r\n    cancelProjectInput();\r\n    localStorage.setItem(`project${newProject.id}`, JSON.stringify(newProject));\r\n  }\r\n}\r\n\r\nfunction removeProject(project) {\r\n  const listProject = document.querySelector(`[data-proj-id='${project.id}']`);\r\n  while(listProject.firstChild) {\r\n    listProject.removeChild(listProject.firstChild);\r\n  }\r\n  listProject.parentNode.removeChild(listProject);\r\n  todoList.deleteProject(project);\r\n  localStorage.removeItem(`project${project.id}`);\r\n}\r\n\r\nfunction addProjectToList(project) {\r\n  const newProject = document.createElement('div');\r\n  newProject.setAttribute('data-proj-id', project.id);\r\n\r\n  const newProjectIcon = document.createElement('span');\r\n  const newProjectName = document.createElement('p');\r\n  const projectDeleteBtn = document.createElement('button');\r\n  projectDeleteBtn.classList.add('project-delete-btn');\r\n  projectDeleteBtn.textContent = 'x';\r\n  projectDeleteBtn.addEventListener('click', removeProject.bind(this, project));\r\n\r\n  newProjectName.textContent = project.name;\r\n\r\n  newProject.append(newProjectIcon, newProjectName, projectDeleteBtn);\r\n  projectList.insertBefore(newProject, newProjectBtn);\r\n\r\n  newProjectIcon.addEventListener('click', toggleColorPicker);\r\n\r\n  newProject.addEventListener('click', () => {\r\n    clearProjectView();\r\n    renderProjectView(project);\r\n    activeProject = project;\r\n  })\r\n}\r\n\r\nfunction toggleColorPicker() {\r\n  if(colorPicker.style.display === 'block') {\r\n    colorPicker.style.display = 'none';\r\n  } else {\r\n    colorPicker.style.display = 'block';\r\n  }\r\n  colorPicker.setAttribute('data-proj', this.parentNode.getAttribute('data-proj-id'));\r\n  colorPicker.style.top = `calc(${this.parentNode.offsetTop}px - 2em)`;\r\n}\r\n\r\nfunction changeIconColor() {\r\n  const newColor = getComputedStyle(this).backgroundColor;\r\n  const projId = this.parentNode.getAttribute('data-proj');\r\n  const proj = document.querySelector(`[data-proj-id='${projId}']`);\r\n  proj.querySelector('span').style.backgroundColor = newColor;\r\n  colorPicker.style.display = 'none';\r\n}\r\n\r\nfunction cancelProjectInput() {\r\n  newProjectBtn.style.display = 'inline';\r\n  newProjectInputContainer.style.display = 'none';\r\n  newProjectInput.value = '';\r\n}\r\n\r\nfunction bindEvents() {\r\n  newProjectBtn.addEventListener('click', showNewProjectInput);\r\n  addProjectBtn.addEventListener('click', addNewProject);\r\n  cancelProjectBtn.addEventListener('click', cancelProjectInput);\r\n\r\n  const colorIcons = colorPicker.querySelectorAll('span');\r\n  colorIcons.forEach(icon => {\r\n    icon.addEventListener('click', changeIconColor);\r\n  })\r\n}\r\n\r\nfunction setDefaultProject() {\r\n  const defaultProject = new Project('tasks');\r\n\r\n  const task1 = new Task('task a', 'a description', '06-12-1970', 'medium');\r\n  task1.addToChecklist('a');\r\n  task1.addToChecklist('b');\r\n\r\n  const task2 = new Task('task b', 'b description', '09-13-2023', 'high');\r\n  task2.addToChecklist('c');\r\n  task2.addToChecklist('d');\r\n\r\n  defaultProject.addTask(task1);\r\n  defaultProject.addTask(task2); \r\n\r\n  activeProject = defaultProject;\r\n  addProjectToList(defaultProject);\r\n  renderProjectView(defaultProject);\r\n}\r\n\r\nbindEvents();\r\nsetDefaultProject();","export default class TodoList {\r\n  constructor() {\r\n    this.projects = [];\r\n  }\r\n\r\n  addProject(project) {\r\n    this.projects.push(project);\r\n  }\r\n\r\n  deleteProject(project) {\r\n    this.projects.splice(this.projects.indexOf(project), 1);\r\n  }\r\n}","import Task from \"./task\";\r\nimport {renderTaskView, clearTaskView} from \"./taskView\";\r\nimport { getActiveProject } from \"./todoListView\";\r\n\r\nconst form = document.querySelector('form');\r\nconst titleInput = document.getElementById('title');\r\nconst descriptionInput = document.getElementById('description');\r\nconst dueDateInput = document.getElementById('due-date');\r\nconst checklistInput = document.getElementById('checklist');\r\nconst checklistItems = document.querySelector('.checklist-items');\r\nconst priorities = document.querySelectorAll('[type=\"radio\"]');\r\nconst h3 = form.querySelector('h3');\r\nconst checklistButton = form.querySelector('.checklist-btn');\r\nconst confirmBtn = form.querySelector('.confirm-btn');\r\nconst cancelBtn = form.querySelector('.cancel-btn');\r\n\r\nlet boundSaveForm;\r\n\r\nexport default function renderForm(task) {\r\n  if(task) {\r\n    populateForm(task);\r\n  }\r\n\r\n  boundSaveForm = saveForm.bind(this, task);\r\n\r\n  h3.textContent = task ? 'edit task' : 'add task';\r\n  confirmBtn.textContent = task ? 'save' : 'add';\r\n  confirmBtn.addEventListener('click', boundSaveForm);\r\n\r\n  form.style.display = 'grid';\r\n}\r\n\r\nfunction bindEvents() {\r\n  cancelBtn.addEventListener('click', clearForm);\r\n  checklistButton.addEventListener('click', addItemToChecklist);\r\n}\r\n\r\nfunction populateForm(task) {\r\n  titleInput.value = task.title;\r\n  descriptionInput.value = task.desc;\r\n  dueDateInput.value = task.dueDate;\r\n\r\n  for(let priority of priorities) {\r\n    if(priority.id === task.priority) {\r\n      priority.checked = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklistItems.appendChild(listItem);\r\n  })\r\n}\r\n\r\nfunction clearForm() {\r\n  titleInput.value = '';\r\n  descriptionInput.value = '';\r\n  dueDateInput.value = '';\r\n\r\n  priorities.forEach(priority => priority.checked = false);\r\n\r\n  while(checklistItems.firstChild) {\r\n    checklistItems.removeChild(checklistItems.firstChild);\r\n  }\r\n\r\n  form.style.display = 'none';\r\n  confirmBtn.removeEventListener('click', boundSaveForm);\r\n}\r\n\r\nfunction saveForm(task) {\r\n  if(!task) {\r\n    task = new Task();\r\n    getActiveProject().addTask(task);\r\n  }\r\n\r\n  task.title = titleInput.value;\r\n  task.desc = descriptionInput.value;\r\n  task.dueDate = dueDateInput.value;\r\n  \r\n  let priorityInput;\r\n  for(let priority of priorities) {\r\n    if(priority.checked === true) {\r\n      priorityInput = priority;\r\n      break;\r\n    }\r\n  }\r\n  task.priority = priorityInput ? priorityInput.value : '';\r\n\r\n  task.checklist.splice(0);\r\n  for(let li of checklistItems.childNodes) {\r\n    task.addToChecklist(li.textContent);\r\n  }\r\n\r\n  if(document.querySelector(`[data-task-id='${task.id}']`)) {\r\n    clearTaskView(task.id);\r\n  }\r\n\r\n  localStorage.setItem(`task${task.id}`, JSON.stringify(task));\r\n  localStorage.setItem(`project${getActiveProject().id}`, JSON.stringify(getActiveProject()));\r\n  renderTaskView(task);\r\n  clearForm();\r\n}\r\n\r\nfunction addItemToChecklist() {\r\n  if(checklistInput.value) {\r\n    const item = document.createElement('li');\r\n    item.textContent = checklistInput.value;\r\n    checklistItems.appendChild(item);\r\n    checklistInput.value = '';\r\n  }\r\n}\r\n\r\nbindEvents();","import renderForm from \"./form\";\r\n\r\nwindow.addEventListener('load', () =>{\r\n  for(let i = 0; i < localStorage.length; i++) {\r\n    console.log(JSON.parse(localStorage.getItem(localStorage.key(i))));\r\n  }\r\n})\r\n\r\nconst newTaskBtn = document.querySelector('.new-task-btn');\r\nnewTaskBtn.addEventListener('click', () => renderForm());\r\n\r\n//delete project\r\n\r\n\r\n"],"names":["Task","constructor","title","desc","dueDate","priority","this","id","checklist","isComplete","addToChecklist","item","push","taskContainer","document","querySelector","renderTaskView","task","taskView","createElement","setAttribute","classList","add","collapsibleItems","textContent","editBtn","addEventListener","renderForm","bind","deleteBtn","forEach","listItem","appendChild","checked","append","style","display","toggleCollapsibleItems","followingTask","insertBefore","clearTaskView","removeEventListener","firstChild","removeChild","e","target","Project","name","tasks","addTask","deleteTask","splice","indexOf","deleteTaskById","i","length","taskContainerHeading","renameProjectContainer","renameProjectBtn","renameProjectInput","getElementById","renameProjectConfirm","renameProjectCancel","renderProjectView","project","clearProjectView","getActiveProject","toggleRenameProject","value","visibility","className","taskId","parentNode","getAttribute","localStorage","setItem","JSON","stringify","projectList","newProjectBtn","newProjectInputContainer","newProjectInput","addProjectBtn","cancelProjectBtn","colorPicker","todoList","projects","addProject","deleteProject","activeProject","removeProject","listProject","removeItem","addProjectToList","newProject","newProjectIcon","newProjectName","projectDeleteBtn","toggleColorPicker","top","offsetTop","changeIconColor","newColor","getComputedStyle","backgroundColor","projId","cancelProjectInput","querySelectorAll","icon","defaultProject","task1","task2","setDefaultProject","titleInput","descriptionInput","dueDateInput","checklistInput","checklistItems","priorities","h3","checklistButton","confirmBtn","boundSaveForm","populateForm","saveForm","clearForm","priorityInput","li","childNodes","window","console","log","parse","getItem","key"],"sourceRoot":""}