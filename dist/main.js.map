{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-list/./src/task.js","webpack://todo-list/./src/taskView.js","webpack://todo-list/./src/form.js","webpack://todo-list/./src/index.js"],"sourcesContent":["export default class Task {\r\n  constructor(title, desc, dueDate, priority) {\r\n    this.id = Task.id;\r\n    Task.id++;\r\n\r\n    this.title = title;\r\n    this.desc = desc;\r\n    this.dueDate = dueDate;\r\n    this.priority = priority;\r\n    this.checklist = [];\r\n    this.isComplete = false;\r\n  }\r\n\r\n  addToChecklist(item) {\r\n    this.checklist.push(item);\r\n  }\r\n}\r\n\r\nTask.id = 0;","import renderForm from \"./form\";\r\n\r\nconst taskContainer = document.querySelector('.tasks');\r\n\r\nexport function renderTaskView(task) {\r\n  const taskView = document.createElement('div');\r\n  taskView.setAttribute('data-id', task.id);\r\n\r\n  const title = document.createElement('h4');\r\n  title.textContent = task.title;\r\n\r\n  const editBtn = document.createElement('button');\r\n  editBtn.textContent = 'edit';\r\n  editBtn.addEventListener('click', renderForm.bind(this, task));\r\n\r\n  const desc = document.createElement('p');\r\n  desc.textContent = task.desc;\r\n\r\n  const dueDate = document.createElement('p');\r\n  dueDate.textContent = task.dueDate;\r\n\r\n  const priority = document.createElement('p');\r\n  priority.textContent = task.priority;\r\n\r\n  const checklist = document.createElement('ul');\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklist.appendChild(listItem);\r\n  })\r\n\r\n  const isComplete = document.createElement('input');\r\n  isComplete.setAttribute('type', 'checkbox');\r\n  isComplete.checked = task.isComplete;\r\n\r\n  taskView.append(title, editBtn, desc, dueDate, priority, checklist, isComplete);\r\n\r\n  let followingTask = document.querySelector(`[data-id='${task.id + 1}']`)\r\n  if(followingTask) {\r\n    taskContainer.insertBefore(taskView, followingTask);\r\n  } else {\r\n    taskContainer.appendChild(taskView);\r\n  }\r\n}\r\n\r\nexport function clearTaskView(id) {\r\n  const taskView = document.querySelector(`[data-id='${id}']`);\r\n  while(taskView.firstChild) {\r\n    taskView.removeChild(taskView.firstChild);\r\n  }\r\n  taskContainer.removeChild(taskView);\r\n}","import Task from \"./task\";\r\nimport {renderTaskView, clearTaskView} from \"./taskView\";\r\n\r\nconst form = document.querySelector('form');\r\nconst titleInput = document.getElementById('title');\r\nconst descriptionInput = document.getElementById('description');\r\nconst dueDateInput = document.getElementById('due-date');\r\nconst checklistInput = document.getElementById('checklist');\r\nconst checklistItems = document.querySelector('.checklist-items');\r\nconst priorities = document.querySelectorAll('[type=\"radio\"]');\r\nconst h3 = form.querySelector('h3');\r\nconst checklistButton = form.querySelector('.checklist-btn');\r\nconst confirmBtn = form.querySelector('.confirm-btn');\r\nconst cancelBtn = form.querySelector('.cancel-btn');\r\n\r\nlet boundSaveForm;\r\n\r\nexport default function renderForm(task) {\r\n  if(task) {\r\n    populateForm(task);\r\n  }\r\n\r\n  boundSaveForm = saveForm.bind(this, task);\r\n\r\n  h3.textContent = task ? 'edit task' : 'add task';\r\n  confirmBtn.textContent = task ? 'save' : 'add';\r\n  confirmBtn.addEventListener('click', boundSaveForm);\r\n\r\n  form.style.display = 'grid';\r\n}\r\n\r\nfunction bindEvents() {\r\n  cancelBtn.addEventListener('click', clearForm);\r\n  checklistButton.addEventListener('click', addItemToChecklist);\r\n}\r\n\r\nfunction populateForm(task) {\r\n  titleInput.value = task.title;\r\n  descriptionInput.value = task.desc;\r\n  dueDateInput.value = task.dueDate;\r\n\r\n  for(let priority of priorities) {\r\n    if(priority.id === task.priority) {\r\n      priority.checked = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklistItems.appendChild(listItem);\r\n  })\r\n}\r\n\r\nfunction clearForm() {\r\n  titleInput.value = '';\r\n  descriptionInput.value = '';\r\n  dueDateInput.value = '';\r\n\r\n  priorities.forEach(priority => priority.checked = false);\r\n\r\n  while(checklistItems.firstChild) {\r\n    checklistItems.removeChild(checklistItems.firstChild);\r\n  }\r\n\r\n  form.style.display = 'none';\r\n  confirmBtn.removeEventListener('click', boundSaveForm);\r\n}\r\n\r\nfunction saveForm(task) {\r\n  if(!task) {\r\n    task = new Task();\r\n  }\r\n\r\n  task.title = titleInput.value;\r\n  task.desc = descriptionInput.value;\r\n  task.dueDate = dueDateInput.value;\r\n  \r\n  let priorityInput;\r\n  for(let priority of priorities) {\r\n    if(priority.checked === true) {\r\n      priorityInput = priority;\r\n      break;\r\n    }\r\n  }\r\n  task.priority = priorityInput ? priorityInput.value : '';\r\n\r\n  task.checklist.splice(0);\r\n  for(let li of checklistItems.childNodes) {\r\n    task.addToChecklist(li.textContent);\r\n  }\r\n\r\n  if(document.querySelector(`[data-id='${task.id}']`)) {\r\n    clearTaskView(task.id);\r\n  }\r\n\r\n  renderTaskView(task);\r\n  clearForm();\r\n}\r\n\r\nfunction addItemToChecklist() {\r\n  if(checklistInput.value) {\r\n    const item = document.createElement('li');\r\n    item.textContent = checklistInput.value;\r\n    checklistItems.appendChild(item);\r\n    checklistInput.value = '';\r\n  }\r\n}\r\n\r\nbindEvents();","import renderForm from \"./form\";\r\n\r\nconst newTaskBtn = document.querySelector('.new-task-btn');\r\nnewTaskBtn.addEventListener('click', () => renderForm());\r\n\r\n\r\n"],"names":["Task","constructor","title","desc","dueDate","priority","this","id","checklist","isComplete","addToChecklist","item","push","taskContainer","document","querySelector","titleInput","getElementById","descriptionInput","dueDateInput","checklistInput","checklistItems","priorities","querySelectorAll","h3","checklistButton","confirmBtn","boundSaveForm","renderForm","task","value","checked","forEach","listItem","createElement","textContent","appendChild","populateForm","saveForm","bind","addEventListener","style","display","clearForm","firstChild","removeChild","removeEventListener","priorityInput","splice","li","childNodes","taskView","clearTaskView","setAttribute","editBtn","append","followingTask","insertBefore","renderTaskView"],"sourceRoot":""}