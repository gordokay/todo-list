{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-list/./src/task.js","webpack://todo-list/./src/taskView.js","webpack://todo-list/./src/project.js","webpack://todo-list/./src/projectView.js","webpack://todo-list/./src/todoListView.js","webpack://todo-list/./src/todoList.js","webpack://todo-list/./src/form.js","webpack://todo-list/./src/index.js"],"sourcesContent":["export default class Task {\r\n  constructor(title, desc, dueDate, priority) {\r\n    this.id = Task.id;\r\n    Task.id++;\r\n\r\n    this.title = title;\r\n    this.desc = desc;\r\n    this.dueDate = dueDate;\r\n    this.priority = priority;\r\n    this.checklist = [];\r\n    this.isComplete = false;\r\n  }\r\n\r\n  addToChecklist(item) {\r\n    this.checklist.push(item);\r\n  }\r\n}\r\n\r\nTask.id = 0;","import renderForm from \"./form\";\r\n\r\nconst taskContainer = document.querySelector('.tasks');\r\n\r\nexport function renderTaskView(task) {\r\n  const taskView = document.createElement('div');\r\n  taskView.setAttribute('data-task-id', task.id);\r\n\r\n  const collapsibleItems = document.createElement('div');\r\n  collapsibleItems.classList.add('collapsible-items');\r\n\r\n  const title = document.createElement('h4');\r\n  title.textContent = task.title;\r\n\r\n  const editBtn = document.createElement('button');\r\n  editBtn.textContent = 'edit';\r\n  editBtn.addEventListener('click', renderForm.bind(this, task));\r\n\r\n  const desc = document.createElement('p');\r\n  desc.textContent = task.desc;\r\n\r\n  const dueDate = document.createElement('p');\r\n  dueDate.textContent = task.dueDate;\r\n\r\n  const priority = document.createElement('p');\r\n  priority.textContent = task.priority;\r\n\r\n  const checklist = document.createElement('ul');\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklist.appendChild(listItem);\r\n  })\r\n\r\n  const isComplete = document.createElement('input');\r\n  isComplete.setAttribute('type', 'checkbox');\r\n  isComplete.checked = task.isComplete;\r\n\r\n  collapsibleItems.append(desc, priority, checklist, isComplete);\r\n  collapsibleItems.style.display = 'none';\r\n\r\n  taskView.append(title, dueDate, editBtn, collapsibleItems);\r\n  taskView.addEventListener('click', toggleCollapsibleItems);\r\n\r\n  let followingTask = document.querySelector(`[data-task-id='${task.id + 1}']`)\r\n  if(followingTask) {\r\n    taskContainer.insertBefore(taskView, followingTask);\r\n  } else {\r\n    taskContainer.appendChild(taskView);\r\n  }\r\n}\r\n\r\nexport function clearTaskView(id) {\r\n  const taskView = document.querySelector(`[data-task-id='${id}']`);\r\n  taskView.removeEventListener('click', toggleCollapsibleItems);\r\n\r\n  while(taskView.firstChild) {\r\n    taskView.removeChild(taskView.firstChild);\r\n  }\r\n  taskContainer.removeChild(taskView);\r\n}\r\n\r\nfunction toggleCollapsibleItems() {\r\n  const collapsibleItems = document.querySelector('.collapsible-items');\r\n  collapsibleItems.style.display = collapsibleItems.style.display === 'none' ? 'block' : 'none';\r\n}","export default class Project {\r\n  constructor(name) {\r\n    this.id = Project.id;\r\n    Project.id++;\r\n    this.name = name;\r\n    this.tasks = [];\r\n  }\r\n\r\n  addTask(task) {\r\n    this.tasks.push(task);\r\n  }\r\n\r\n  deleteTask(task) {\r\n    this.tasks.splice(this.activeTasks.indexOf(task), 1);\r\n  }\r\n}\r\n\r\nProject.id = 0;","import { renderTaskView, clearTaskView } from \"./taskView\";\r\nimport { getActiveProject } from \"./todoListView\";\r\n\r\nconst taskContainterHeading = document.querySelector('.tasks h2');\r\n\r\nexport function renderProjectView(project) {\r\n  taskContainterHeading.textContent = project.name; \r\n  project.tasks.forEach(task => renderTaskView(task));\r\n}\r\n\r\nexport function clearProjectView() {\r\n  taskContainterHeading.textContent = '';\r\n  getActiveProject().tasks.forEach(task => {\r\n    clearTaskView(task.id);\r\n  })\r\n}","import TodoList from \"./todoList\";\r\nimport Project from \"./project\";\r\nimport {renderProjectView, clearProjectView} from \"./projectView\";\r\n\r\nconst projectList = document.querySelector('.projects');\r\nconst newProjectBtn = document.querySelector('.new-project-btn');\r\nconst newProjectInputContainer = document.querySelector('.new-project-input');\r\nconst newProjectInput = document.getElementById('new-project');\r\nconst addProjectBtn = document.querySelector('.add-project-btn');\r\nconst cancelProjectBtn = document.querySelector('.cancel-project-btn');\r\n\r\nconst todoList = new TodoList();\r\nlet activeProject;\r\n\r\nexport function getActiveProject() {\r\n  return activeProject;\r\n}\r\n\r\nfunction showNewProjectInput() {\r\n  newProjectBtn.style.display = 'none';\r\n  newProjectInputContainer.style.display = 'block';\r\n}\r\n\r\nfunction addNewProject() {\r\n  if(newProjectInput.value) {\r\n    const newProject = new Project(newProjectInput.value);\r\n    todoList.addProject(newProject);\r\n    addProjectToList(newProject);\r\n    clearProjectView();\r\n    renderProjectView(newProject);\r\n    activeProject = newProject;\r\n    cancelProjectInput();\r\n  }\r\n}\r\n\r\nfunction addProjectToList(project) {\r\n  const newProject = document.createElement('div');\r\n  newProject.setAttribute('data-proj', project.id);\r\n\r\n  const newProjectIcon = document.createElement('span');\r\n  const newProjectName = project.name;\r\n\r\n  newProject.append(newProjectIcon, newProjectName);\r\n  projectList.insertBefore(newProject, newProjectBtn);\r\n\r\n  newProject.addEventListener('click', () => {\r\n    clearProjectView();\r\n    renderProjectView(project);\r\n    activeProject = project;\r\n  })\r\n}\r\n\r\nfunction cancelProjectInput() {\r\n  newProjectBtn.style.display = 'inline';\r\n  newProjectInputContainer.style.display = 'none';\r\n  newProjectInput.value = '';\r\n}\r\n\r\nfunction bindEvents() {\r\n  newProjectBtn.addEventListener('click', showNewProjectInput);\r\n  addProjectBtn.addEventListener('click', addNewProject);\r\n  cancelProjectBtn.addEventListener('click', cancelProjectInput);\r\n}\r\n\r\nfunction setDefaultProject() {\r\n  const defaultProject = new Project('tasks');\r\n  activeProject = defaultProject;\r\n  addProjectToList(defaultProject);\r\n  renderProjectView(defaultProject);\r\n}\r\n\r\nbindEvents();\r\nsetDefaultProject();","export default class TodoList {\r\n  constructor() {\r\n    this.projects = [];\r\n  }\r\n\r\n  addProject(project) {\r\n    this.projects.push(project);\r\n  }\r\n\r\n  deleteProject(project) {\r\n    this.projects.splice(this.projects.indexOf(project), 1);\r\n  }\r\n}","import Task from \"./task\";\r\nimport {renderTaskView, clearTaskView} from \"./taskView\";\r\nimport { getActiveProject } from \"./todoListView\";\r\n\r\nconst form = document.querySelector('form');\r\nconst titleInput = document.getElementById('title');\r\nconst descriptionInput = document.getElementById('description');\r\nconst dueDateInput = document.getElementById('due-date');\r\nconst checklistInput = document.getElementById('checklist');\r\nconst checklistItems = document.querySelector('.checklist-items');\r\nconst priorities = document.querySelectorAll('[type=\"radio\"]');\r\nconst h3 = form.querySelector('h3');\r\nconst checklistButton = form.querySelector('.checklist-btn');\r\nconst confirmBtn = form.querySelector('.confirm-btn');\r\nconst cancelBtn = form.querySelector('.cancel-btn');\r\n\r\nlet boundSaveForm;\r\n\r\nexport default function renderForm(task) {\r\n  if(task) {\r\n    populateForm(task);\r\n  }\r\n\r\n  boundSaveForm = saveForm.bind(this, task);\r\n\r\n  h3.textContent = task ? 'edit task' : 'add task';\r\n  confirmBtn.textContent = task ? 'save' : 'add';\r\n  confirmBtn.addEventListener('click', boundSaveForm);\r\n\r\n  form.style.display = 'grid';\r\n}\r\n\r\nfunction bindEvents() {\r\n  cancelBtn.addEventListener('click', clearForm);\r\n  checklistButton.addEventListener('click', addItemToChecklist);\r\n}\r\n\r\nfunction populateForm(task) {\r\n  titleInput.value = task.title;\r\n  descriptionInput.value = task.desc;\r\n  dueDateInput.value = task.dueDate;\r\n\r\n  for(let priority of priorities) {\r\n    if(priority.id === task.priority) {\r\n      priority.checked = true;\r\n      break;\r\n    }\r\n  }\r\n\r\n  task.checklist.forEach(item => {\r\n    const listItem = document.createElement('li');\r\n    listItem.textContent = item;\r\n    checklistItems.appendChild(listItem);\r\n  })\r\n}\r\n\r\nfunction clearForm() {\r\n  titleInput.value = '';\r\n  descriptionInput.value = '';\r\n  dueDateInput.value = '';\r\n\r\n  priorities.forEach(priority => priority.checked = false);\r\n\r\n  while(checklistItems.firstChild) {\r\n    checklistItems.removeChild(checklistItems.firstChild);\r\n  }\r\n\r\n  form.style.display = 'none';\r\n  confirmBtn.removeEventListener('click', boundSaveForm);\r\n}\r\n\r\nfunction saveForm(task) {\r\n  if(!task) {\r\n    task = new Task();\r\n    getActiveProject().addTask(task);\r\n  }\r\n\r\n  task.title = titleInput.value;\r\n  task.desc = descriptionInput.value;\r\n  task.dueDate = dueDateInput.value;\r\n  \r\n  let priorityInput;\r\n  for(let priority of priorities) {\r\n    if(priority.checked === true) {\r\n      priorityInput = priority;\r\n      break;\r\n    }\r\n  }\r\n  task.priority = priorityInput ? priorityInput.value : '';\r\n\r\n  task.checklist.splice(0);\r\n  for(let li of checklistItems.childNodes) {\r\n    task.addToChecklist(li.textContent);\r\n  }\r\n\r\n  if(document.querySelector(`[data-task-id='${task.id}']`)) {\r\n    clearTaskView(task.id);\r\n  }\r\n\r\n  renderTaskView(task);\r\n  clearForm();\r\n}\r\n\r\nfunction addItemToChecklist() {\r\n  if(checklistInput.value) {\r\n    const item = document.createElement('li');\r\n    item.textContent = checklistInput.value;\r\n    checklistItems.appendChild(item);\r\n    checklistInput.value = '';\r\n  }\r\n}\r\n\r\nbindEvents();","import renderForm from \"./form\";\r\n\r\nconst newTaskBtn = document.querySelector('.new-task-btn');\r\nnewTaskBtn.addEventListener('click', () => renderForm());\r\n\r\n\r\n"],"names":["Task","constructor","title","desc","dueDate","priority","this","id","checklist","isComplete","addToChecklist","item","push","taskContainer","document","querySelector","renderTaskView","task","taskView","createElement","setAttribute","collapsibleItems","classList","add","textContent","editBtn","addEventListener","renderForm","bind","forEach","listItem","appendChild","checked","append","style","display","toggleCollapsibleItems","followingTask","insertBefore","clearTaskView","removeEventListener","firstChild","removeChild","Project","name","tasks","addTask","deleteTask","splice","activeTasks","indexOf","taskContainterHeading","renderProjectView","project","clearProjectView","getActiveProject","projectList","newProjectBtn","newProjectInputContainer","newProjectInput","getElementById","addProjectBtn","cancelProjectBtn","todoList","projects","addProject","deleteProject","activeProject","addProjectToList","newProject","newProjectIcon","newProjectName","cancelProjectInput","value","defaultProject","setDefaultProject","titleInput","descriptionInput","dueDateInput","checklistInput","checklistItems","priorities","querySelectorAll","h3","checklistButton","confirmBtn","boundSaveForm","populateForm","saveForm","clearForm","priorityInput","li","childNodes"],"sourceRoot":""}